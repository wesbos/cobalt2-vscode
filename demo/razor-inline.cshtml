@page "{id:int}"

@inject AppDbContext Db

@functions {
  [BindProperty]
  public Customer Customer { get; set; }

  [TempData]
  public string Message { get; set; }

  public async Task<IActionResult> OnGetAsync(int id)
  {
    Customer = await Db.Customers.FindAsync(id);

    if (Customer == null)
    {
      Message = $"Customer {id} not found!";
      return RedirectToPage("./Index");
    }

    return Page();
  }

  public async Task<IActionResult> OnPostAsync()
  {
    if (!ModelState.IsValid)
    {
      return Page();
    }

    Db.Attach(Customer).State = EntityState.Modified;

    try
    {
      await Db.SaveChangesAsync();
      Message = "Customer updated successfully!";
    }
    catch (DbUpdateConcurrencyException)
    {
      Message = $"Customer {Customer.Id} not found!";
    }

    return RedirectToPage("./Index");
  }
}

@{
  ViewData["Title"] = "Edit Customer";
}

<h1>Edit Customer - @Customer.Id</h1>
<form method="post" class="form-horizontal">
  <div asp-validation-summary="All" class="text-danger"></div>
  <input asp-for="Customer.Id" type="hidden" />
  <div class="form-group">
    <label asp-for="Customer.Name" class="col-md-2 control-label"></label>
    <div class="col-md-10">
      <input asp-for="Customer.Name" class="form-control" />
      <span asp-validation-for="Customer.Name" class="text-danger"></span>
    </div>
  </div>
  <div class="form-group">
    <div class="col-md-offset-2 col-md-10">
      <button type="submit" class="btn btn-primary">Save</button>
    </div>
  </div>
</form>

@section Scripts {
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
